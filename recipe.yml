name: Nilla OS # Replace this name with your image name
id: nilla # Replace this ID with your image ID
stages:
- id: build
  base: ghcr.io/vanilla-os/desktop:main # Optionally, Replace this image URL with a different one i.e. nvidia:main, etc
  singlelayer: false
  labels:
    maintainer: self-maintained # Optionally, Replace this with your name
  args:
    DEBIAN_FRONTEND: noninteractive # Set the image environment as non-interactive
  
  # Commands to run first before building the modules
  runs:
    commands:
      - echo 'APT::Install-Recommends "1";' > /etc/apt/apt.conf.d/01norecommends

  modules:
  - name: init-setup
    type: shell
    commands:
    - lpkg --unlock
    - apt-get update

  # Put your custom actions behind this comment

  - name: Blue-packages # Sample module using the built-in Apt module to install packages
    type: apt
    source:
      packages:
      - aqemu
      - broadcom-sta-dkms
      - barrier
     #- bash-color-prompt
     #- bcache-tools
     #- evtest
     #- epson-inkjet-printer-escpr
     #- epson-inkjet-printer-escpr2
      - fastfetch
     #- fish
     #- firewall-config
     #- foo2zjs
      - gcc
      - gpg
     #- hplip
     #- krb5-workstation
     #- ifuse
     #- input-remapper
     #- libimobiledevice
     #- libxcrypt-compat
     #- lm_sensors
     #- make
     #- mesa-libGLU
     #- nerd-fonts
     #- opendyslexic-fonts
     #- playerctl
     #- printer-driver-brlaser
     #- pulseaudio-utils
     #- python3-pip
      - rclone
      - rclone-browser
      - restic
     #- samba-dcerpc
     #- samba-ldb-ldap-modules
     #- samba-winbind-clients
     #- samba-winbind-modules
     #- samba
     #- solaar
     #- stress-ng
     #- tailscale
      - tmux
     #- usbmuxd
      - wireguard-tools
     #- xprop
      - wl-clipboard
     #- zsh
     #- simple-scan
     # - gnome-shell-extension-appindicator
      - gnome-shell-extension-blur-my-shell
      - gnome-shell-extension-caffeine
      - gnome-shell-extension-dashtodock
      - gnome-shell-extension-gsconnect
     #- gnome-shell-extension-logo-menu
     #- gnome-shell-extension-search-light
     #- gnome-shell-extension-tailscale-gnome-qs
     #- libgda-sqlite
     #- libgda
     #- libratbag-ratbagd
      - nautilus-kdeconnect
      - nautilus-nextcloud
      - linssid
      - wavemon
     #- openssh-askpass
     #- yaru-theme
     #- adobe-source-code-pro-fonts
      - android-sdk-platform-tools
     # - adb
     # - fastboot
     #- cascadia-code-fonts
     #- code
     #- containerd.io
     #- dbus-x11
     #- google-droid-sans-mono-fonts
     #- google-go-mono-fonts
     #- ibm-plex-mono-fonts
     #- incus
     #- incus-agent
     #- iotop
     #- jetbrains-mono-fonts-all
     #- kcli
     #- libvirt-daemon
     # - libvirt-clients-qemu
     # - lxc
     # - lxd-agent
     # - lxd
     #- mozilla-fira-mono-fonts
     #- p7zip-plugins
      - 7zip
      - wireshark
     #- powerline-fonts
     # - powertop
     #- qemu-char-spice
     #- qemu-device-display-virtio-gpu
     #- qemu-device-display-virtio-vga
     #- qemu-device-usb-redirect
     #- qemu-img
     #- qemu-system-x86-core
     #- qemu-user-binfmt
     #- qemu-user-static
     # - qemu-system
     #- ubuntu-family-fonts
     # - umoci
     # - virt-manager
     # - virt-viewer

  - name: example-modules # Sample module demonstrating importing local and remote modules
    type: includes
    includes:
      - modules/50-install-debs.yml # Sample local module present in this repository
      - gh:vanilla-os/dev-image:main:modules/00-basics.yml # Sample GitHub remote module in the format: `gh:your-name/your-repo:branch:modules/file.yml`
      - https://raw.githubusercontent.com/Vanilla-OS/dev-image/main/modules/05-go.yml # Sample full URL remote module

  # Put your custom actions before this comment

  - name: set-image-name-abroot
    type: includes
    includes:
      - modules/80-set-image-abroot-config.yml

  - name: cleanup
    type: shell
    commands:
    - apt-get autoremove -y
    - apt-get clean
    - lpkg --lock

  - name: fsguard
    type: fsguard
    CustomFsGuard: false
    FsGuardLocation: "/usr/sbin/FsGuard"
    GenerateKey: true
    FilelistPaths: ["/usr/bin"]
    modules:
      - name: remove-prev-fsguard
        type: shell
        commands:
          - rm -rf /FsGuard 
          - rm -f ./minisign.pub ./minisign.key 
          - chmod +x /usr/sbin/init

  - name: cleanup2
    type: shell
    commands:
      - rm -rf /tmp/*
      - rm -rf /var/tmp/*
      - rm -rf /sources
      
